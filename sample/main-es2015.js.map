{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/guards/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/shared/helpers/cookie.ts","./src/app/shared/helpers/index.ts","./src/app/shared/helpers/regex.ts","./src/app/shared/helpers/url.ts","./src/app/shared/services/api.service.ts","./src/app/shared/services/jwt.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AuthGuard } from './guards/auth.guard';\nimport { HomeModule } from './modules/home/home.module';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    loadChildren: () => import('./modules/auth/auth.module').then(m => m.AuthModule),\n    data : {\n      title: 'Login'\n    }\n  },\n  {\n    path: 'user',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./modules/home/home.module').then(m => m.HomeModule),\n    data: {\n      title: 'User'\n    }\n  },\n  {\n    path: '**',\n    redirectTo: '/'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'sample';\n}\n","<router-outlet></router-outlet>","import { HomeModule } from './modules/home/home.module';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { HomeComponent } from './modules/home/home.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {  HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AuthService } from './../services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router, UrlSegment, CanLoad, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate, CanLoad {\n  constructor(\n    private auth: AuthService,\n    private router : Router\n  ){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if(!this.auth.isAuthenticated()){\n      this.router.navigate(['/login'])\n      return false;\n    }\n    return true;\n  }\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n      if(!this.auth.isAuthenticated()){\n        this.router.navigate(['/login'])\n        return false;\n      }\n      return true ;\n    }\n}\n","import { JwtService } from './../shared/services/jwt.service';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './../shared/services/api.service';\nimport { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  path: string = \"api\";\n  isLogin : boolean = false;\n  endpoints: any = {\n    login: \"login\"\n  }\n  constructor(\n    private api: ApiService,\n    private jwt: JwtService\n  ) { }\n\n  login(data: any): Observable<any> {\n    return this.api.post(this.path, this.endpoints.login, data).pipe(\n      map((res: any) => {\n        this.jwt.setToken(res);\n        this.isLogin = true;\n        return res;\n      })\n    )\n  }\n  isAuthenticated(){\n    if(this.isLogin){\n      return true;\n    } else {\n      if(this.jwt.getAccessToken()){\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n}\n","/**\r\n * Get cookie by key\r\n *\r\n * @export\r\n * @param {*} key\r\n * @returns\r\n */\r\nexport function get(key) {\r\n    let cookies = document.cookie;\r\n    let array = cookies\r\n        .split(';')\r\n        .filter(str => {\r\n            let arr = str.trim().split('=');\r\n            return arr[0] == key;\r\n        });\r\n    if (!array || array.length <= 0) {\r\n        return '';\r\n    }\r\n    return decodeURIComponent(array[0].trim().split('=')[1]);\r\n\r\n}\r\n\r\n/**\r\n * Set cookie with key = value;expires=times\r\n *\r\n * @export\r\n * @param {*} name\r\n * @param {*} value\r\n * @param {Date} [time=null]\r\n * @returns {void}\r\n */\r\nexport function set(name, value, time: Date = null) {\r\n    let cookie = `${name}=${encodeURIComponent(value)}`;\r\n    let expires = (time) ? `; expires=${time.toUTCString()}` : '';\r\n    let path = `; path =/`;\r\n    document.cookie = (`${cookie}${expires}${path}`);\r\n}\r\n\r\n/**\r\n * Remove cookie by key\r\n *\r\n * @export\r\n * @param {*} key\r\n */\r\nexport function remove(key) {\r\n    document.cookie = `${key}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`\r\n}","import * as cookie from './cookie';\nimport * as url from './url';\nimport * as regex from './regex';\nexport {\n    url,\n    cookie,\n    regex\n}","export const phone = /[0|+][1-9][0-9]{8,12}/;","/**\n * Object to Query Stirng\n * @export\n * @param params \n * @returns\n */\nexport function query(params: any = {}) {\n    if (params && Object.keys(params).length > 0) {\n        return `${Object.keys(params).filter(key => {\n            return (key && params[key] != 'null')\n        })\n            .map(key => {\n                return [key, encodeURIComponent(params[key])].join('=');\n            }).join('&')}`\n    } else {\n        return ''\n    }\n}\n/**\n * return url: domain/path/endpoint/params\n * @export\n * @param domain \n * @param path \n * @param endpoint \n * @param params \n * @returns\n */\nexport function merge(domain, path, endpoint, params = null) {\n    if ( params && Object.keys(params).length > 0) {\n        return `${domain}/${path}/${endpoint}?${query(params)}`;\n    } else {\n        return `${domain}/${path}/${endpoint}`;\n    }\n}","import { Injectable, Inject, LOCALE_ID } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { JwtService } from './jwt.service';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { url } from '../helpers';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  apiServer: string = environment.apiServe;\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject(LOCALE_ID) public locale: any\r\n  ) { }\r\n\r\n  /**\r\n   * REQUEST API\r\n   * METHOD POST\r\n   *\r\n   * @param {string} path\r\n   * @param {string} endpoint\r\n   * @param {*} [data={}]\r\n   * @returns {Observable<any>}\r\n   * @memberof ApiService\r\n   */\r\n  get(path: string, endpoint: string, data: any = {}): Observable<any> {\r\n    return this.http.get(url.merge(this.apiServer, path, endpoint, data)).pipe(\r\n      map((result: any) => {\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * REQUEST API\r\n   * METHOD POST\r\n   *\r\n   * @param {string} path\r\n   * @param {string} endpoint\r\n   * @param {*} [data={}]\r\n   * @param {*} [options={}]\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  post(path: string, endpoint: string, data: any = {}, options: any = null) {\r\n    let httpOptions;\r\n    if (!options || options.type != 'multipart/form-data') {\r\n      httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type': (options && options.type) ? options.type : 'application/json'\r\n        })\r\n      };\r\n    } else {\r\n      httpOptions = {\r\n        headers: new HttpHeaders({})\r\n      };\r\n    }\r\n    return this.http.post(url.merge(this.apiServer, path, endpoint), data, httpOptions).pipe(\r\n      map((result: any) => {\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * REQUEST API\r\n   * METHOD PUT\r\n   * @param {string} path\r\n   * @param {string} endpoint\r\n   * @param {*} data\r\n   * @param {*} [options]\r\n   * @returns {Observable<any>}\r\n   * @memberof ApiService\r\n   */\r\n  put(path: string, endpoint: string, data: any, options?: any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': (options && options.type) ? options.type : 'application/json',\r\n      })\r\n    };\r\n    return this.http.put(url.merge(this.apiServer, path, endpoint), data, httpOptions).pipe(\r\n      map((result: any) => {\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * REQUEST API FOR FILE DATA\r\n   * METHOD POST\r\n   * @param {string} path\r\n   * @param {string} endpoint\r\n   * @param {*} data\r\n   * @param {*} options\r\n   * @returns {Observable<any>}\r\n   * @memberof ApiService\r\n   */\r\n  file(path: string, endpoint: string, data: any): Observable<any> {\r\n    return this.http.post(url.merge(this.apiServer, path, endpoint), data, { responseType: 'blob' });\r\n  }\r\n\r\n  /**\r\n   * REQUEST API FOR FILE DATA\r\n   * METHOD POST\r\n   * @param {string} link\r\n   * @memberof ApiService\r\n   */\r\n  fileURL(link: string): Observable<any> {\r\n    return this.http.get(link, { responseType: 'blob' });\r\n  }\r\n\r\n  /**\r\n   * Convert json to urlencoded\r\n   * \r\n   * @static\r\n   * @param {*} data\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  public static convertToFormUrlencoded(data) {\r\n    return Object.keys(data).map(key => {\r\n      return key + '=' + encodeURIComponent(data[key]);\r\n    }).join('&');\r\n  }\r\n\r\n  /**\r\n   * Convert json to query string\r\n   *\r\n   * @static\r\n   * @param {string} url\r\n   * @param {*} data\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  public static convertToQueryString(url: string, data: any) {\r\n    const query = Object.keys(data).map(key => key + '=' + encodeURIComponent(data[key])).join('&');\r\n    return url + '?' + query;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { cookie } from '../helpers';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\ninterface IAccessToken {\r\n  access_token: string,\r\n  access_token_expired: string,\r\n  refresh_token: string,\r\n  token: string\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtService {\r\n  token = '';\r\n  tokenType = 'Bearer';\r\n  refreshToken = '';\r\n  expire = 7200;\r\n  tokenUpdated: BehaviorSubject<any> = new BehaviorSubject(false);\r\n  constructor() { }\r\n\r\n  /**\r\n   * Get token with format \"Token_type token\"\r\n   *\r\n   * @returns\r\n   * @memberof JwtService\r\n   */\r\n  getToken() {\r\n    if (this.token && this.tokenType) {\r\n      return `${this.tokenType} ${this.token}`;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set token to cookie\r\n   *\r\n   * @param {IAccessToken} res\r\n   * @memberof JwtService\r\n   */\r\n  setToken(res: IAccessToken) {\r\n    this.token = res.token;\r\n    this.refreshToken = res.refresh_token;\r\n    cookie.set('sample', this.token, new Date(res.access_token_expired));\r\n    // cookie.set('qr_code_refresh_token', this.refreshToken);\r\n    this.tokenUpdated.next(true);\r\n  }\r\n\r\n  /**\r\n   * Remove all token\r\n   *\r\n   * @memberof JwtService\r\n   */\r\n  removeToken() {\r\n    this.token = '';\r\n    this.refreshToken = '';\r\n    cookie.remove('sample');\r\n    cookie.remove('qr_code_refresh_token');\r\n  }\r\n  \r\n  /**\r\n   * Get token if token exists, return false if token does not exists\r\n   * \r\n   * @returns {(boolean | string)}\r\n   * @memberof JwtService\r\n   */\r\n  getAccessToken(): boolean | string {\r\n    const accessToken = cookie.get('sample');\r\n    if (!accessToken) {\r\n      return (false);\r\n    }\r\n    this.token = accessToken;\r\n    this.refreshToken = cookie.get('qr_code_refresh_token');\r\n    return accessToken;\r\n  }\r\n\r\n  /**\r\n   * Get refresh token if token exists, return false if refresh token does not exists\r\n   *\r\n   * @returns {(boolean | string)}\r\n   * @memberof JwtService\r\n   */\r\n  getRefreshToken(): boolean | string {\r\n    const refreshToken = cookie.get('qr_code_refresh_token');\r\n    if (!refreshToken) {\r\n      return (false);\r\n    }\r\n    return refreshToken;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiServe: \"https://reqres.in\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}